{"version":3,"file":"date.pipe.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-intl/dist/npm/date.pipe.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar intl_service_1 = require(\"./intl.service\");\nvar isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\nvar ɵ0 = isNumeric;\nexports.ɵ0 = ɵ0;\n/**\n * Formats a date value to a string based on the requested format.\n * This pipe uses the [IntlService]({% slug api_intl_intlservice %}).\n *\n * @example\n * ```ng-template-no-run\n * <ul>\n *    <li>{{date | kendoDate }}</li>\n *    <li>{{milliseconds | kendoDate: 'M/dd/yyy' }}</li>\n *    <li>{{stringDate | kendoDate: 'G' }}</li>\n * </ul>\n * ```\n */\nvar DatePipe = /** @class */ (function () {\n    /**\n     * @hidden\n     */\n    function DatePipe(intlService) {\n        this.intlService = intlService;\n    }\n    /**\n     * Converts a `Date` object into a string based on the specified format.\n     * If no format is provided, the default short date format is used.\n     *\n     * @param value - The date to format.\n     * @param format - The format string or options.\n     * @param localeId - (Optional) The ID of the locale which will be used instead of the default one.\n     * @return - The formatted date.\n     */\n    DatePipe.prototype.transform = function (value, format, localeId) {\n        if (format === void 0) { format = \"\"; }\n        value = this.normalize(value);\n        if (value) {\n            return this.intlService.formatDate(value, format, localeId);\n        }\n        return value;\n    };\n    DatePipe.prototype.normalize = function (value) {\n        if (value && typeof value === 'string') {\n            value = this.intlService.parseDate(value);\n        }\n        else if (value && isNumeric(value)) {\n            value = new Date(parseFloat(value));\n        }\n        return value;\n    };\n    DatePipe = tslib_1.__decorate([\n        core_1.Pipe({\n            name: 'kendoDate'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [intl_service_1.IntlService])\n    ], DatePipe);\n    return DatePipe;\n}());\nexports.DatePipe = DatePipe;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAiDmC,AAGxB;;;;;;;;;2HAEM;;;;"}