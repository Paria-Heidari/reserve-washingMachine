{"version":3,"file":"number.pipe.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-intl/dist/npm/number.pipe.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar intl_service_1 = require(\"./intl.service\");\n/**\n * Formats a number value to a string based on the requested format.\n * This pipe uses the [`IntlService`]({% slug api_intl_intlservice %}).\n *\n * @example\n * ```ng-template-no-run\n *   <ul>\n *     <li>{{decimal | kendoNumber:'c' }}</li>\n *     <li>{{stringNumber | kendoNumber:'p' }}</li>\n *     <li>{{int | kendoNumber:'##.00' }}</li>\n *  </ul>\n * ```\n */\nvar NumberPipe = /** @class */ (function () {\n    /**\n     * @hidden\n     */\n    function NumberPipe(intlService) {\n        this.intlService = intlService;\n    }\n    /**\n     * Converts a `Number` object into a string based on the specified format.\n     * If no format is provided, the value is formatted as decimal number using the\n     * [`\"n\"`](https://github.com/telerik/kendo-intl/blob/master/docs/num-formatting/index.md#standard) format.\n     *\n     * @param value - The numer that will be formatted.\n     * @param format - The format string or options.\n     * @param localeId - (Optional) The locale ID that will be used in place of the default one.\n     * @return - The formatted number.\n     */\n    NumberPipe.prototype.transform = function (value, format, localeId) {\n        if (typeof value === 'string') {\n            value = this.intlService.parseNumber(value);\n        }\n        if (value !== null && value !== undefined) {\n            return this.intlService.formatNumber(value, format, localeId);\n        }\n        return value;\n    };\n    NumberPipe = tslib_1.__decorate([\n        core_1.Pipe({\n            name: 'kendoNumber'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [intl_service_1.IntlService])\n    ], NumberPipe);\n    return NumberPipe;\n}());\nexports.NumberPipe = NumberPipe;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;qCA0BqC,AAG1B;;;;;;;;;4GAEQ;;;;"}