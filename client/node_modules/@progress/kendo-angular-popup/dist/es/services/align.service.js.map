{"version":3,"file":"align.service.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-popup/dist/es/services/align.service.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as tslib_1 from \"tslib\";\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { DOMService } from './dom.service';\nimport { eitherRect, removeStackingOffset, scaleRect } from '../util';\nimport { SCALE } from '../scale';\n/**\n * @hidden\n */\nvar AlignService = /** @class */ (function () {\n    function AlignService(_dom, scale) {\n        if (scale === void 0) { scale = 1; }\n        this._dom = _dom;\n        this.scale = scale;\n    }\n    AlignService.prototype.alignElement = function (settings) {\n        var anchor = settings.anchor, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, margin = settings.margin, offset = settings.offset, positionMode = settings.positionMode;\n        var scale = this.scale || 1;\n        var fixedMode = positionMode === 'fixed' || !this._dom.hasOffsetParent(element);\n        var anchorRect = fixedMode ? this.absoluteRect(anchor, element, offset, scale) : this.relativeRect(anchor, element, offset, scale);\n        var elementRect = scaleRect(this._dom.offset(element), scale);\n        var result = this._dom.align({\n            anchorAlign: anchorAlign,\n            anchorRect: anchorRect,\n            elementAlign: elementAlign,\n            elementRect: elementRect,\n            margin: margin\n        });\n        return result;\n    };\n    AlignService.prototype.absoluteRect = function (anchor, element, offset, scale) {\n        var scrollPos = this.elementScrollPosition(anchor, element);\n        var rect = eitherRect(this._dom.offset(anchor), offset);\n        var stackScale = 2 * scale;\n        var stackScroll = this._dom.stackingElementScroll(element);\n        if (scale !== 1 && stackScroll) {\n            stackScroll.x /= stackScale;\n            stackScroll.y /= stackScale;\n        }\n        var stackOffset = this._dom.stackingElementOffset(element);\n        if (scale !== 1 && stackOffset) {\n            stackOffset.left /= stackScale;\n            stackOffset.top /= stackScale;\n        }\n        return this._dom.removeScroll(this._dom.addScroll(removeStackingOffset(scaleRect(rect, scale), stackOffset), stackScroll), scrollPos);\n    };\n    AlignService.prototype.elementScrollPosition = function (anchor, element) {\n        return anchor ? { x: 0, y: 0 } : this._dom.scrollPosition(element);\n    };\n    AlignService.prototype.relativeRect = function (anchor, element, offset, scale) {\n        var rect = eitherRect(this._dom.position(anchor, element, scale), offset);\n        return scaleRect(rect, scale);\n    };\n    AlignService = tslib_1.__decorate([\n        Injectable(),\n        tslib_1.__param(1, Inject(SCALE)), tslib_1.__param(1, Optional()),\n        tslib_1.__metadata(\"design:paramtypes\", [DOMService, Number])\n    ], AlignService);\n    return AlignService;\n}());\nexport { AlignService };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA4CuC,AAClB;;;;;;;;;;;;gIAGA;;;;"}