{"version":3,"file":"dom.service.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-popup/dist/npm/services/dom.service.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar kendo_popup_common_1 = require(\"@progress/kendo-popup-common\");\nvar util_1 = require(\"../util\");\nvar kendo_angular_common_1 = require(\"@progress/kendo-angular-common\");\nvar STYLES = [\n    'font-size',\n    'font-family',\n    'font-stretch',\n    'font-style',\n    'font-weight',\n    'line-height'\n];\n/**\n * @hidden\n */\nvar DOMService = /** @class */ (function () {\n    function DOMService() {\n    }\n    DOMService.prototype.addOffset = function (current, addition) {\n        return {\n            left: current.left + addition.left,\n            top: current.top + addition.top\n        };\n    };\n    DOMService.prototype.addScroll = function (rect, scroll) {\n        return kendo_popup_common_1.addScroll(rect, scroll);\n    };\n    DOMService.prototype.align = function (settings) {\n        return kendo_popup_common_1.align(settings);\n    };\n    DOMService.prototype.boundingOffset = function (el) {\n        return kendo_popup_common_1.boundingOffset(this.nativeElement(el));\n    };\n    DOMService.prototype.getFontStyles = function (el) {\n        var window = this.getWindow();\n        if (!window || !el) {\n            return [];\n        }\n        var computedStyles = window.getComputedStyle(this.nativeElement(el));\n        return STYLES.map(function (font) { return ({ key: font, value: computedStyles[font] }); });\n    };\n    DOMService.prototype.getWindow = function () {\n        return util_1.isWindowAvailable() ? window : null;\n    };\n    DOMService.prototype.hasOffsetParent = function (el) {\n        if (!el) {\n            return false;\n        }\n        return !!this.nativeElement(el).offsetParent;\n    };\n    DOMService.prototype.offset = function (el) {\n        if (!el) {\n            return null;\n        }\n        return kendo_popup_common_1.offset(this.nativeElement(el));\n    };\n    DOMService.prototype.offsetAtPoint = function (el, currentLocation) {\n        if (!el) {\n            return null;\n        }\n        var element = this.nativeElement(el);\n        var _a = element.style, left = _a.left, top = _a.top, transition = _a.transition;\n        element.style.transition = 'none';\n        element.style.left = currentLocation.left + \"px\";\n        element.style.top = currentLocation.top + \"px\";\n        var currentOffset = kendo_popup_common_1.offset(element);\n        element.style.left = left;\n        element.style.top = top;\n        // prevents elements with transition to be animated because of the change\n        // tslint:disable-next-line:no-unused-expression\n        element.offsetHeight;\n        element.style.transition = transition;\n        return currentOffset;\n    };\n    DOMService.prototype.nativeElement = function (el) {\n        if (!el) {\n            return null;\n        }\n        return el.nativeElement || el;\n    };\n    DOMService.prototype.position = function (element, popup, scale) {\n        if (scale === void 0) { scale = 1; }\n        if (!element || !popup) {\n            return null;\n        }\n        return kendo_popup_common_1.positionWithScroll(this.nativeElement(element), this.nativeElement(popup), scale);\n    };\n    DOMService.prototype.removeScroll = function (rect, scroll) {\n        return kendo_popup_common_1.removeScroll(rect, scroll);\n    };\n    DOMService.prototype.restrictToView = function (settings) {\n        return kendo_popup_common_1.restrictToView(settings);\n    };\n    DOMService.prototype.scrollPosition = function (el) {\n        return kendo_popup_common_1.scrollPosition(this.nativeElement(el));\n    };\n    DOMService.prototype.scrollableParents = function (el) {\n        return util_1.scrollableParents(this.nativeElement(el));\n    };\n    DOMService.prototype.stackingElementOffset = function (el) {\n        var relativeContextElement = this.getRelativeContextElement(el);\n        if (!relativeContextElement) {\n            return null;\n        }\n        return kendo_popup_common_1.offset(relativeContextElement);\n    };\n    DOMService.prototype.stackingElementScroll = function (el) {\n        var relativeContextElement = this.getRelativeContextElement(el);\n        if (!relativeContextElement) {\n            return { x: 0, y: 0 };\n        }\n        return {\n            x: relativeContextElement.scrollLeft,\n            y: relativeContextElement.scrollTop\n        };\n    };\n    DOMService.prototype.getRelativeContextElement = function (el) {\n        if (!el || !util_1.hasRelativeStackingContext()) {\n            return null;\n        }\n        var parent = this.nativeElement(el).parentElement;\n        while (parent) {\n            if (window.getComputedStyle(parent).transform !== 'none') {\n                return parent;\n            }\n            parent = parent.parentElement;\n        }\n        return null;\n    };\n    DOMService.prototype.useRelativePosition = function (el) {\n        return !!this.getRelativeContextElement(el);\n    };\n    DOMService.prototype.windowViewPort = function (el) {\n        return kendo_popup_common_1.getWindowViewPort(this.nativeElement(el));\n    };\n    DOMService.prototype.zIndex = function (anchor, container) {\n        return util_1.zIndex(this.nativeElement(anchor), this.nativeElement(container));\n    };\n    DOMService.prototype.zoomLevel = function () {\n        if (!kendo_angular_common_1.isDocumentAvailable() || !util_1.isWindowAvailable()) {\n            return 1;\n        }\n        return parseFloat((document.documentElement.clientWidth / window.innerWidth).toFixed(2)) || 1;\n    };\n    DOMService.prototype.isZoomed = function () {\n        return this.zoomLevel() > 1;\n    };\n    DOMService = tslib_1.__decorate([\n        core_1.Injectable()\n    ], DOMService);\n    return DOMService;\n}());\nexports.DOMService = DOMService;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8IM;;;;wdAGa;;;;"}