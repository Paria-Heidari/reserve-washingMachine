{"version":3,"file":"slider-ticks.component.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-inputs/dist/es/sliders-common/slider-ticks.component.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as tslib_1 from \"tslib\";\n/* tslint:disable:component-selector */\nimport { Component, Inject, Input, Optional, QueryList, ViewChildren, HostBinding, TemplateRef } from '@angular/core';\nimport { RTL } from '@progress/kendo-angular-l10n';\nimport { calculateTicksCount, calculateValueFromTick } from './sliders-util';\n/**\n * @hidden\n */\nvar SliderTick = /** @class */ (function () {\n    function SliderTick(value) {\n        this.value = value;\n        this.classes = {\n            'k-tick': true\n        };\n    }\n    return SliderTick;\n}());\n/**\n * @hidden\n */\nvar SliderTicksComponent = /** @class */ (function () {\n    function SliderTicksComponent(rtl) {\n        this.rtl = rtl;\n        this.wrapperClasses = 'k-reset k-slider-items';\n        this.ticks = [];\n    }\n    SliderTicksComponent.prototype.ngOnChanges = function (_) {\n        this.createTicks();\n    };\n    SliderTicksComponent.prototype.createTicks = function () {\n        var count = calculateTicksCount(this.min, this.max, this.step);\n        var largeStep = this.largeStep;\n        var tickValueProps = {\n            max: this.max,\n            min: this.min,\n            smallStep: this.step\n        };\n        var result = [];\n        for (var i = 0; i < count; i++) {\n            result.push(new SliderTick(calculateValueFromTick(i, tickValueProps)));\n            if (largeStep && i % largeStep === 0) {\n                result[i].large = true;\n                result[i].classes['k-tick-large'] = true;\n            }\n        }\n        if (this.rtl || this.vertical) {\n            result = result.reverse();\n        }\n        if (result.length > 0) {\n            Object.assign(result[0].classes, this.endTickClasses(true));\n            Object.assign(result[result.length - 1].classes, this.endTickClasses(false));\n        }\n        this.ticks = result;\n    };\n    SliderTicksComponent.prototype.endTickClasses = function (first) {\n        return {\n            'k-first': (first && !this.vertical) || (!first && this.vertical),\n            'k-last': (!first && !this.vertical) || (first && this.vertical)\n        };\n    };\n    tslib_1.__decorate([\n        HostBinding('class'),\n        tslib_1.__metadata(\"design:type\", String)\n    ], SliderTicksComponent.prototype, \"wrapperClasses\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Function)\n    ], SliderTicksComponent.prototype, \"tickTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], SliderTicksComponent.prototype, \"vertical\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], SliderTicksComponent.prototype, \"step\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], SliderTicksComponent.prototype, \"largeStep\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], SliderTicksComponent.prototype, \"min\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], SliderTicksComponent.prototype, \"max\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], SliderTicksComponent.prototype, \"labelTemplate\", void 0);\n    tslib_1.__decorate([\n        ViewChildren('tickElement'),\n        tslib_1.__metadata(\"design:type\", QueryList)\n    ], SliderTicksComponent.prototype, \"tickElements\", void 0);\n    SliderTicksComponent = tslib_1.__decorate([\n        Component({\n            selector: '[kendoSliderTicks]',\n            template: \"\\n    <li #tickElement *ngFor=\\\"let tick of ticks;\\\"\\n        [ngClass]=\\\"tick.classes\\\"\\n        title=\\\"{{ tickTitle(tick.value) }}\\\"\\n        role=\\\"presentation\\\"\\n     >\\n         <ng-container [ngSwitch]=\\\"tick.large\\\">\\n            <span class=\\\"k-label\\\" *ngSwitchCase=\\\"true\\\">\\n                <ng-container [ngTemplateOutlet]=\\\"labelTemplate || defaultLabel\\\" [ngTemplateOutletContext]=\\\"tick\\\">\\n                </ng-container>\\n            </span>\\n            <ng-container *ngSwitchCase=\\\"false\\\">&nbsp;</ng-container>\\n         </ng-container>\\n     </li>\\n\\n     <ng-template #defaultLabel let-value=\\\"value\\\">\\n        {{ tickTitle(value) }}\\n     </ng-template>\\n  \"\n        }),\n        tslib_1.__param(0, Optional()), tslib_1.__param(0, Inject(RTL)),\n        tslib_1.__metadata(\"design:paramtypes\", [Boolean])\n    ], SliderTicksComponent);\n    return SliderTicksComponent;\n}());\nexport { SliderTicksComponent };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAwF+C,AAIpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAGkB;;;;"}