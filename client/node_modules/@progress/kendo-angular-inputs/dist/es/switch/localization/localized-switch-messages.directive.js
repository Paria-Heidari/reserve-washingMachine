/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Directive, forwardRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Messages } from './messages';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
var LocalizedSwitchMessagesDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LocalizedSwitchMessagesDirective, _super);
    function LocalizedSwitchMessagesDirective(service) {
        var _this = _super.call(this) || this;
        _this.service = service;
        return _this;
    }
    LocalizedSwitchMessagesDirective_1 = LocalizedSwitchMessagesDirective;
    var LocalizedSwitchMessagesDirective_1;
    LocalizedSwitchMessagesDirective = LocalizedSwitchMessagesDirective_1 = tslib_1.__decorate([
        tslib_1.__metadata("design:paramtypes", [LocalizationService])
    ], LocalizedSwitchMessagesDirective);
LocalizedSwitchMessagesDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: LocalizedSwitchMessagesDirective, selectors: [["", "kendoSwitchLocalizedMessages", ""]], factory: function LocalizedSwitchMessagesDirective_Factory(t) { return new (t || LocalizedSwitchMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService)); }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: Messages,
                useExisting: forwardRef(function () { return LocalizedSwitchMessagesDirective_1; }) // tslint:disable-line:no-forward-ref
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(LocalizedSwitchMessagesDirective, [{
        type: Directive,
        args: [{
                providers: [
                    {
                        provide: Messages,
                        useExisting: forwardRef(function () { return LocalizedSwitchMessagesDirective_1; }) // tslint:disable-line:no-forward-ref
                    }
                ],
                selector: '[kendoSwitchLocalizedMessages]'
            }]
    }], function () { return [{ type: LocalizationService }]; }, null);
    return LocalizedSwitchMessagesDirective;
}(Messages));
export { LocalizedSwitchMessagesDirective };

//# sourceMappingURL=localized-switch-messages.directive.js.map