/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Component, Input } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["kendoContrastValidation", ""];
const _c1 = ["class", "k-contrast-validation k-text-success", 4, "ngIf"];
const _c2 = ["class", "k-contrast-validation k-text-error", 4, "ngIf"];
const _c3 = [1, "k-contrast-validation", "k-text-success"];
const _c4 = [1, "k-icon", "k-i-check"];
function ContrastValidationComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", _c3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelement(2, "span", _c4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r261 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵselect(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r261.passMessage, " ");
} }
const _c5 = [1, "k-contrast-validation", "k-text-error"];
const _c6 = [1, "k-icon", "k-i-close"];
function ContrastValidationComponent_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", _c5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelement(2, "span", _c6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r262 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵselect(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r262.failMessage, " ");
} }
let ContrastValidationComponent = class ContrastValidationComponent {
    constructor(localization) {
        this.localization = localization;
    }
    get passMessage() {
        return this.localization.get('passContrast');
    }
    get failMessage() {
        return this.localization.get('failContrast');
    }
    get contrastText() {
        return `${this.type}: ${this.ratio.toFixed(1)}`;
    }
}
ContrastValidationComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: ContrastValidationComponent, selectors: [["", "kendoContrastValidation", ""]], factory: function ContrastValidationComponent_Factory(t) { return new (t || ContrastValidationComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService)); }, inputs: { type: "type", ratio: "ratio", pass: "pass" }, attrs: _c0, consts: 4, vars: 3, template: function ContrastValidationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, ContrastValidationComponent_span_2_Template, 3, 1, "span", _c1);
        ɵngcc0.ɵɵtemplate(3, ContrastValidationComponent_span_3_Template, 3, 1, "span", _c2);
    } if (rf & 2) {
        ɵngcc0.ɵɵselect(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.contrastText);
        ɵngcc0.ɵɵselect(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pass);
        ɵngcc0.ɵɵselect(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.pass);
    } }, encapsulation: 2 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ContrastValidationComponent, [{
        type: Component,
        args: [{
                selector: '[kendoContrastValidation]',
                template: `
        <span>{{contrastText}}</span>
                <span class="k-contrast-validation k-text-success" *ngIf="pass">
                    {{passMessage}}
                    <span class="k-icon k-i-check"></span>
                </span>
                <span class="k-contrast-validation k-text-error" *ngIf="!pass">
                    {{failMessage}}
                <span class="k-icon k-i-close"></span>
        </span>
    `
            }]
    }], function () { return [{ type: LocalizationService }]; }, { constructor: [], localization: [], passMessage: [], failMessage: [], contrastText: [], type: [{
            type: Input
        }], ratio: [{
            type: Input
        }], pass: [{
            type: Input
        }] });;
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], ContrastValidationComponent.prototype, "type", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], ContrastValidationComponent.prototype, "ratio", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], ContrastValidationComponent.prototype, "pass", void 0);
ContrastValidationComponent = tslib_1.__decorate([
    tslib_1.__metadata("design:paramtypes", [LocalizationService])
], ContrastValidationComponent);
export { ContrastValidationComponent };

//# sourceMappingURL=contrast-validation.component.js.map