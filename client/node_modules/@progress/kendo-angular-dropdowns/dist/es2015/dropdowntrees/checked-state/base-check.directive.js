/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { getHierarchicalItemLevel, valueFrom } from '../../common/util';
/**
 * @hidden
 *
 * A directive which manages the in-memory checked state of the MultiSelectTree nodes.
 */
export class BaseCheckDirective {
    addItem(item) {
        if (this.isItemChecked(item)) {
            return;
        }
        const level = getHierarchicalItemLevel(item.index);
        const candidate = Object.assign({}, item, { level });
        this.checkedItems.push(candidate);
        this.checkedKeys.add(valueFrom(candidate, this.valueField));
    }
    removeItem(item) {
        if (!this.isItemChecked(item)) {
            return;
        }
        const level = getHierarchicalItemLevel(item.index);
        const candidate = Object.assign({}, item, { level });
        this.checkedItems = this.checkedItems
            .filter(item => valueFrom(item, this.valueField) !== valueFrom(candidate, this.valueField));
        this.checkedKeys.delete(valueFrom(candidate, this.valueField));
    }
    isItemChecked(item) {
        return this.checkedKeys.has(valueFrom(item, this.valueField));
    }
    updateItems() {
        this.checkedItems = this.checkedItems || [];
        this.checkedKeys = new Set(this.checkedItems.map(item => valueFrom(item, this.valueField)));
    }
}
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], BaseCheckDirective.prototype, "valueField", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array)
], BaseCheckDirective.prototype, "checkedItems", void 0);
