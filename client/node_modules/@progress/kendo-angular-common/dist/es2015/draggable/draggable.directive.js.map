{"version":3,"file":"draggable.directive.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-common/dist/es2015/draggable/draggable.directive.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as tslib_1 from \"tslib\";\nimport { EventEmitter, ElementRef, Directive, Output, NgZone, Input } from '@angular/core';\nimport { isDocumentAvailable, isChanged } from '../utils';\nimport Draggable from '@telerik/kendo-draggable';\nlet DraggableDirective = class DraggableDirective {\n    constructor(element, ngZone) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.enableDrag = true;\n        this.kendoPress = new EventEmitter();\n        this.kendoDrag = new EventEmitter();\n        this.kendoRelease = new EventEmitter();\n    }\n    ngOnInit() {\n        this.toggleDraggable();\n    }\n    ngOnChanges(changes) {\n        if (isChanged('enableDrag', changes)) {\n            this.toggleDraggable();\n        }\n    }\n    ngOnDestroy() {\n        this.destroyDraggable();\n    }\n    toggleDraggable() {\n        if (isDocumentAvailable()) {\n            this.destroyDraggable();\n            if (this.enableDrag) {\n                this.draggable = new Draggable({\n                    drag: (e) => this.kendoDrag.next(e),\n                    press: (e) => this.kendoPress.next(e),\n                    release: (e) => this.kendoRelease.next(e)\n                });\n                this.ngZone.runOutsideAngular(() => this.draggable.bindTo(this.element.nativeElement));\n            }\n        }\n    }\n    destroyDraggable() {\n        if (this.draggable) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n    }\n};\ntslib_1.__decorate([\n    Input(),\n    tslib_1.__metadata(\"design:type\", Boolean)\n], DraggableDirective.prototype, \"enableDrag\", void 0);\ntslib_1.__decorate([\n    Output(),\n    tslib_1.__metadata(\"design:type\", EventEmitter)\n], DraggableDirective.prototype, \"kendoPress\", void 0);\ntslib_1.__decorate([\n    Output(),\n    tslib_1.__metadata(\"design:type\", EventEmitter)\n], DraggableDirective.prototype, \"kendoDrag\", void 0);\ntslib_1.__decorate([\n    Output(),\n    tslib_1.__metadata(\"design:type\", EventEmitter)\n], DraggableDirective.prototype, \"kendoRelease\", void 0);\nDraggableDirective = tslib_1.__decorate([\n    Directive({\n        selector: '[kendoDraggable]'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [ElementRef, NgZone])\n], DraggableDirective);\nexport { DraggableDirective };\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wHAuCC;;;;;;;;;;;;;;;;;yCAiBwC,AAGlC;;;;"}