{"version":3,"file":"draggable.directive.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-common/dist/npm/draggable/draggable.directive.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar utils_1 = require(\"../utils\");\nvar kendo_draggable_1 = require(\"@telerik/kendo-draggable\");\nvar DraggableDirective = /** @class */ (function () {\n    function DraggableDirective(element, ngZone) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.enableDrag = true;\n        this.kendoPress = new core_1.EventEmitter();\n        this.kendoDrag = new core_1.EventEmitter();\n        this.kendoRelease = new core_1.EventEmitter();\n    }\n    DraggableDirective.prototype.ngOnInit = function () {\n        this.toggleDraggable();\n    };\n    DraggableDirective.prototype.ngOnChanges = function (changes) {\n        if (utils_1.isChanged('enableDrag', changes)) {\n            this.toggleDraggable();\n        }\n    };\n    DraggableDirective.prototype.ngOnDestroy = function () {\n        this.destroyDraggable();\n    };\n    DraggableDirective.prototype.toggleDraggable = function () {\n        var _this = this;\n        if (utils_1.isDocumentAvailable()) {\n            this.destroyDraggable();\n            if (this.enableDrag) {\n                this.draggable = new kendo_draggable_1.default({\n                    drag: function (e) { return _this.kendoDrag.next(e); },\n                    press: function (e) { return _this.kendoPress.next(e); },\n                    release: function (e) { return _this.kendoRelease.next(e); }\n                });\n                this.ngZone.runOutsideAngular(function () { return _this.draggable.bindTo(_this.element.nativeElement); });\n            }\n        }\n    };\n    DraggableDirective.prototype.destroyDraggable = function () {\n        if (this.draggable) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n    };\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], DraggableDirective.prototype, \"enableDrag\", void 0);\n    tslib_1.__decorate([\n        core_1.Output(),\n        tslib_1.__metadata(\"design:type\", core_1.EventEmitter)\n    ], DraggableDirective.prototype, \"kendoPress\", void 0);\n    tslib_1.__decorate([\n        core_1.Output(),\n        tslib_1.__metadata(\"design:type\", core_1.EventEmitter)\n    ], DraggableDirective.prototype, \"kendoDrag\", void 0);\n    tslib_1.__decorate([\n        core_1.Output(),\n        tslib_1.__metadata(\"design:type\", core_1.EventEmitter)\n    ], DraggableDirective.prototype, \"kendoRelease\", void 0);\n    DraggableDirective = tslib_1.__decorate([\n        core_1.Directive({\n            selector: '[kendoDraggable]'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone])\n    ], DraggableDirective);\n    return DraggableDirective;\n}());\nexports.DraggableDirective = DraggableDirective;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAwD6C,AAGlC;;;;;;;;;;;;;;;;;wHAEgB;;;;"}