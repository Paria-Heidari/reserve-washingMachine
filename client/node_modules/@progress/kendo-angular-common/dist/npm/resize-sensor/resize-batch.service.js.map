{"version":3,"file":"resize-batch.service.js","sources":["/Users/paria/workspace/washIt/client/node_modules/@progress/kendo-angular-common/dist/npm/resize-sensor/resize-batch.service.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\n/**\n * @hidden\n */\nvar ResizeBatchService = /** @class */ (function () {\n    function ResizeBatchService(ngZone) {\n        this.ngZone = ngZone;\n        this.scheduled = [];\n        this.resolvedPromise = Promise.resolve(null);\n        this.flush = this.flush.bind(this);\n    }\n    ResizeBatchService.prototype.schedule = function (instance, method) {\n        var _this = this;\n        this.scheduled.push({ instance: instance, method: method });\n        if (!this.subscription) {\n            this.ngZone.runOutsideAngular(function () {\n                _this.subscription = rxjs_1.from(_this.resolvedPromise)\n                    .subscribe(_this.flush);\n            });\n        }\n    };\n    ResizeBatchService.prototype.isScheduled = function (instance) {\n        return Boolean(this.scheduled.find(function (item) { return item.instance === instance; }));\n    };\n    ResizeBatchService.prototype.cancel = function (instance) {\n        var scheduled = this.scheduled;\n        var count = scheduled.length;\n        for (var idx = 0; idx < count; idx++) {\n            if (scheduled[idx].instance === instance) {\n                scheduled.splice(idx, 1);\n                if (!scheduled.length) {\n                    this.unsubscribe();\n                }\n                return;\n            }\n        }\n    };\n    ResizeBatchService.prototype.ngOnDestroy = function () {\n        this.unsubscribe();\n    };\n    ResizeBatchService.prototype.unsubscribe = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    };\n    ResizeBatchService.prototype.flush = function () {\n        this.scheduled.forEach(function (item) {\n            item.method.call(item.instance);\n        });\n        this.scheduled = [];\n        this.unsubscribe();\n    };\n    ResizeBatchService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [core_1.NgZone])\n    ], ResizeBatchService);\n    return ResizeBatchService;\n}());\nexports.ResizeBatchService = ResizeBatchService;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAiD6C,AACjB;;;;;;yNAED;;;;"}